# -*- coding: utf-8 -*-
"""Vooba_Rajkumar_231173_Assign-1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13BW7mBD6L3Dep_VmpI7l1ZPnbuao1xzr

# **NAME:Vooba Rajkumar**
# **ROLL-NO:231173**
# **BRANCH:Electrical Engineering**

# Assignment 0
**Instrunctions for the assignment** \\

*   Open Google Colab: Begin by launching Google Colab and creating a new Python notebook.
*   Read Comments Carefully: Pay close attention to the comments provided within the codeblocks.


*   Code Block Completion: Fill in the codeblocks as per the instructions given in the comments.
*   Avoid Copying: Ensure that you understand the concepts and refrain from directly copying code from external sources.


*   Execute Codeblocks: Verify that each codeblock runs without errors by executing them.
*   Save and Submit: Once you've completed the assignment, save your notebook and follow the submission guidelines provided by your instructor.










**Notes:**

Encouragement: Take your time to understand the concepts behind each codeblock. This assignment aims to strengthen your Python programming skills. \\
Good Luck! : If you have any questions or require clarification on any aspect of the instructions, feel free to ask. \\
 \\

Best wishes for your assignment! These instructions are crafted to provide clarity and guidance as you work through the tasks in Google Colab.

## Getting Started
Solving these exercises will help make you a better programmer. Solve them in order, because each solution builds scaffolding, working code, and knowledge you can use on future problems. Read the directions carefully, and have fun!



*   To save your work to your Google Drive, go to File then "Save Copy in Drive".
*   Your own work will now appear in your Google Drive account!
*   Work on this copy as directed

## What to do when you don't know what to do next
- When the exercise asks you to reverse an list, the way forward is to search for "How to reverse a list in Python" in your favorite search engine.
- When the exercise asks you to check if a number is even, the way forward is to search for "how to check if a number is even in Python".
- When the exercise has you calculate the area of a circle, the way forward is to search for "how to calculate the area of a circle in Python" or "How to get pi in Python".

ðŸ˜€ðŸ˜€

## Basic Python Exercises

1. Create a new list from two list \\
list1 = [10, 20, 25, 30, 35] \\
list2 = [40, 45, 60, 75, 90]
"""

list1 = [10, 20, 25, 30, 35]
list2 = [40, 45, 60, 75, 90]
mergedlist = list1 + list2
print("Merged list:", mergedlist)

"""2. Print multiplication table from 1 to 10"""

for i in range(1, 11):
    for j in range(1, 11):
        print(f"{i} x {j} = {i*j}", end='\t')
    print()

"""3. Print a downward Half-Pyramid Pattern

0 0 0 0 0   
0 0 0 0 <br>
0 0 0 <br>
0 0 <br>
0
"""

rows = 5
for i in range(rows, 0, -1):
    print("0 " * i)

""" 4. Given the following assignment of the vegetables list, add "tomato" to the end of the list and sort them in alphabetical order.\
vegetables = ["eggplant", "broccoli", "carrot","cauliflower", "zucchini"]
"""

vegetables = ["eggplant", "broccoli", "carrot", "cauliflower", "zucchini"]
vegetables.append("tomato")
vegetables.sort()
print("Sorted vegetables:", vegetables)

"""5. Write a function definition named is_odd that takes in a number and returns True or False if that number is odd."""

def is_odd(number):
    return number % 2 != 0
print(is_odd(5))

"""6. Write a function definition named mode that takes in sequence of numbers and returns the most commonly occuring value"""

def mode(numbers):
    from collections import Counter
    count = Counter(numbers)
    return count.most_common(1)[0][0]
print(mode([1, 2, 2, 3, 4]))

"""## Numpy Exercises

Exercise 1: Create a 4X2 integer array and Prints its attributes \\
**Note:** The element must be a type of unsigned int16. \\
And print the following Attributes: â€“



1.   The shape of an array.
2.   Array dimensions.
3.   The Length of each element of the array in bytes.
"""

import numpy as np
array = np.array([[1, 2], [3, 4], [5, 6], [7, 8]], dtype=np.uint16)
print("Array:")
print(array)

print("\nAttributes:")
print("Shape of the array:", array.shape)
print("Array dimensions:", array.ndim)
print("Length of each element in bytes:", array.itemsize)

"""Exercise 2: Following is the provided numPy array. Return array of items by taking the third column from all rows \\
sampleArray = numpy.array ( [ [ 11 ,22, 33 ], [ 44, 55, 66 ], [ 77, 88, 99 ] ] )
"""

import numpy as np

sampleArray = np.array([[11, 22, 33], [44, 55, 66], [77, 88, 99]])
third_column = sampleArray[:, 2]
print(third_column)

"""Exercise 3: Sort following NumPy array \\
Case 1: Sort array by the second row \\
Case 2: Sort the array by the second column
"""

import numpy as np
arr = np.array([[8, 2, 7],
                [4, 6, 5],
                [9, 1, 3]])

sort_order = np.argsort(arr[1, :])
sorted_by_second_row = arr[:, sort_order]
print(sorted_by_second_row)

sort_order = np.argsort(arr[:, 1])
sorted_by_second_column = arr[sort_order, :]
print(sorted_by_second_column)

"""## Pandas Exercises
In this exercise, we are using Automobile Dataset for data analysis. This Dataset has different characteristics of an auto such as body-style, wheel-base, engine-type, price, mileage, horsepower, etc. \\
https://pynative.com/wp-content/uploads/2019/01/Automobile_data.csv

Exercise 1: From the given dataset print the first and last five rows.
"""

import pandas as pd

data=pd.read_csv("/content/Automobile_data.csv")

print("First 5 rows:")
print(data.head())


print("\nLast 5 rows:")
print(data.tail())

"""Exercise 2: Replace all column values which contain ?, n.a, or NaN with suitable values and print the updated dataset.:"""

data.replace(["?", "n.a"], np.nan, inplace=True)
print(data.head())

"""Exercise 5: Count total cars per company and print them



"""

car_counts = data['company'].value_counts()


print("Total cars per company:")
print(car_counts)

"""## Matplotlib Exercises

Use the following CSV file for this exercise. Read this file using Pandas or NumPy or using in-built matplotlib function. \\
https://pynative.com/wp-content/uploads/2019/01/company_sales_data.csv

Exercise 1: Read Total profit of all months and show it using a line plot \\
Total profit data provided for each month. Generated line plot must include the following properties: â€“

X label name = Month Number \\
Y label name = Total profit \\
"""

import pandas as pd
import matplotlib.pyplot as plt

data = pd.read_csv("/content/company_sales_data.csv")

months = data['month_number']
total_profit = data['total_profit']

plt.plot(months, total_profit, marker='o', linestyle='-', color='b')
plt.xlabel('Month Number')
plt.ylabel('Total profit')
plt.title('Total Profit of All Months')
plt.grid(True)
plt.show()

"""Exercise : Read face cream and facewash product sales data and show it using the bar chart \\
The bar chart should display the number of units sold per month for each product. \\
Add a separate bar for each product in the same chart.
"""

months = data['month_number']
face_cream_sales = data['facecream']
facewash_sales = data['facewash']

bar_width = 0.35
positions = np.arange(len(months))


plt.bar(positions, face_cream_sales, width=bar_width, label='Face Cream')
plt.bar(positions + bar_width, facewash_sales, width=bar_width, label='Facewash')


plt.xlabel('Month Number')
plt.ylabel('Units Sold')
plt.title('Monthly Sales of Face Cream and Facewash')
plt.xticks(positions + bar_width / 2, months)  # Set x-axis ticks to months centered between bars
plt.legend()

plt.show()